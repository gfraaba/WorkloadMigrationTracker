@page "/workloads/edit/{id:int}"
@using Shared.DTOs
@using WebApp.Services

@inject WorkloadService WorkloadService
@inject NavigationManager Navigation

<h3>Edit Workload</h3>

@if (workload == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="workload" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <InputText id="name" class="form-control" @bind-Value="workload.Name" />
        </div>
        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputText id="description" class="form-control" @bind-Value="workload.Description" />
        </div>
        <div class="mb-3">
            <label for="azureNamePrefix" class="form-label">Azure Name Prefix</label>
            <InputText id="azureNamePrefix" class="form-control" @bind-Value="workload.AzureNamePrefix" />
        </div>
        <div class="mb-3">
            <label for="primaryPOC" class="form-label">Primary Point of Contact</label>
            <InputText id="primaryPOC" class="form-control" @bind-Value="workload.PrimaryPOC" />
        </div>
        <div class="mb-3">
            <label for="secondaryPOC" class="form-label">Secondary Point of Contact</label>
            <InputText id="secondaryPOC" class="form-control" @bind-Value="workload.SecondaryPOC" />
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Cancel</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private WorkloadDto? workload;

    protected override async Task OnInitializedAsync()
    {
        workload = await WorkloadService.GetWorkloadByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await WorkloadService.UpdateWorkloadAsync(workload!);
        Navigation.NavigateTo("/workloads");
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/workloads");
    }
}