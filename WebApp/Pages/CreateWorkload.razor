@page "/workloads/create"
@using Shared.Models
@using WebApp.Services

@inject WorkloadService WorkloadService
@inject NavigationManager Navigation

<h3>Create Workload</h3>

<EditForm Model="newWorkload" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="newWorkload.Name" />
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputText id="description" class="form-control" @bind-Value="newWorkload.Description" />
    </div>
    <div class="mb-3">
        <label for="azureNamePrefix" class="form-label">Azure Name Prefix</label>
        <InputText id="azureNamePrefix" class="form-control" @bind-Value="newWorkload.AzureNamePrefix" />
    </div>
    <div class="mb-3">
        <label for="primaryPOC" class="form-label">Primary Point of Contact</label>
        <InputText id="primaryPOC" class="form-control" @bind-Value="newWorkload.PrimaryPOC" />
    </div>
    <div class="mb-3">
        <label for="secondaryPOC" class="form-label">Secondary Point of Contact</label>
        <InputText id="secondaryPOC" class="form-control" @bind-Value="newWorkload.SecondaryPOC" />
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <button type="button" class="btn btn-secondary" @onclick="NavigateBack">Cancel</button>
</EditForm>

@code {
    private Workload newWorkload = new Workload { Name = "", Description = "", AzureNamePrefix = "", PrimaryPOC = "", SecondaryPOC = "" };

    private async Task HandleValidSubmit()
    {
        await WorkloadService.CreateWorkloadAsync(newWorkload);
        Navigation.NavigateTo("/workloads");
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/workloads");
    }
}