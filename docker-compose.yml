services:
  api:
    build:
      context: ..
      dockerfile: WebApi/api.Dockerfile
    platform: ${DOCKER_PLATFORM}
    hostname: api
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: "true"
      DB_SERVER: ${DB_SERVER}
      DB_NAME: "WorkloadMigration"
      DB_USER: "sa"
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ..:/workspace
    ports:
      - "8080:8080"
    stdin_open: true
    tty: true
    depends_on:
      db:
        condition: service_healthy

  db:
    build:
      context: ..
      dockerfile: Database/db.Dockerfile
      args:
        PLATFORM: ${DOCKER_PLATFORM} # The 'platform' directive in docker-compose.yml alone is insufficient for the base image: mcr.microsoft.com/mssql/server:2022-CU18-ubuntu-22.04.
    platform: ${DOCKER_PLATFORM}
    hostname: db # ‚Üê This is your server name, otherwise docker container ID will be used!
    environment:
      SA_PASSWORD: ${DB_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_AGENT_ENABLED: "false" # Faster startup
      MSSQL_INITIALIZE: "true"
      MSSQL_OPTIONS: "-N -C" # -N/TrustServerCertificate=True: Bypasses certificate validation | -C/Encrypt=True: Encrypts connection
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -U sa -P $${SA_PASSWORD} -Q \"SELECT 1\" -C -N || exit 1"]
      interval: 15s
      timeout: 30s
      retries: 10
      start_period: 60s # Extended for ARM64
    volumes:
      - ../Database:/database
    ports:
      - "1433:1433"